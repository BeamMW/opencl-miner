git:
  depth: false

matrix:
  include:

# ###############################################################################
# # OSX Debug
# ###############################################################################

#     - os: osx
#       language: cpp
#       osx_image: xcode9.3
#       before_install: 
#         - export TZ=Etc/GMT-3
#         - brew unlink cmake
#         - brew unlink boost 
#         - brew install cmake boost
#         - export OPENSSL_ROOT_DIR="/usr/local/opt/openssl"
#       env: 
#         - BUILD_TYPE=Debug
#         - OS_FOLDER=mac
#       script:
#         - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE . && make -j 4;
        
# ###############################################################################
# # OSX Release
# ###############################################################################

#     - os: osx
#       language: cpp
#       osx_image: xcode9.3
#       before_install:
#         - export TZ=Etc/GMT-3
#         - brew unlink cmake
#         - brew unlink boost 
#         - brew install cmake boost
#         - export OPENSSL_ROOT_DIR="/usr/local/opt/openssl"
#       env: 
#         - BUILD_TYPE=Release
#         - OS_FOLDER=mac
#       script:
#         - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE  . && make -j 4;

###############################################################################
# Linux Debug
###############################################################################

    - os: linux
      language: cpp
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libboost-all-dev
            - libssl-dev
            - curl
      before_install:
        - export TZ=Etc/GMT-3
        - sudo apt install ocl-icd-* opencl-headers
        - wget "https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.sh"
        - sudo sh cmake-3.12.0-Linux-x86_64.sh --skip-license --prefix=/usr
        - eval "CC=gcc-7 && CXX=g++-7"
      env: 
        - BUILD_TYPE=Debug
        - OS_FOLDER=linux
      script:
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE . && make -j 4 -f Makefile;

###############################################################################
# Linux Release
###############################################################################

    - os: linux
      language: cpp
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libboost-all-dev
            - libssl-dev
            - curl
            - libxi-dev
            - libcups2-dev
      before_install:
        - export TZ=Etc/GMT-3
        - sudo apt install ocl-icd-* opencl-headers
        - wget "https://cmake.org/files/v3.12/cmake-3.12.0-Linux-x86_64.sh"
        - sudo sh cmake-3.12.0-Linux-x86_64.sh --skip-license --prefix=/usr
        - eval "CC=gcc-7 && CXX=g++-7"        
      env: 
        - BUILD_TYPE=Release
        - OS_FOLDER=linux
      script:
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE . && make -j 4 -f Makefile;

###############################################################################
# Common part
###############################################################################

# TODO: version detection should be in one place
before_script:
  - BEAM_VERSION="1.0.$(git rev-list HEAD --count)"
  - curl -sL https://raw.githubusercontent.com/travis-ci/artifacts/master/install | bash

after_success:
  # deploy using ftp server
  - BUILDS_SERVER_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER
  - tar -cvzf opencl-miner-$BEAM_VERSION.tar.gz --directory=$HOME/build/BeamMW/opencl-miner beam-opencl-miner

  # upload binaries to FTP
  - curl --retry 3 --ftp-create-dirs -T opencl-miner-$BEAM_VERSION.tar.gz $BUILDS_SERVER_PATH/  

notifications:
  email:
    - big.romanov@gmail.com
